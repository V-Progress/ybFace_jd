package com.yunbiao.ybsmartcheckin_live_id.db2;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.yunbiao.ybsmartcheckin_live_id.db2.Company;
import com.yunbiao.ybsmartcheckin_live_id.db2.Depart;
import com.yunbiao.ybsmartcheckin_live_id.db2.Sign;
import com.yunbiao.ybsmartcheckin_live_id.db2.User;
import com.yunbiao.ybsmartcheckin_live_id.db2.Visitor;

import com.yunbiao.ybsmartcheckin_live_id.db2.CompanyDao;
import com.yunbiao.ybsmartcheckin_live_id.db2.DepartDao;
import com.yunbiao.ybsmartcheckin_live_id.db2.SignDao;
import com.yunbiao.ybsmartcheckin_live_id.db2.UserDao;
import com.yunbiao.ybsmartcheckin_live_id.db2.VisitorDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig companyDaoConfig;
    private final DaoConfig departDaoConfig;
    private final DaoConfig signDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig visitorDaoConfig;

    private final CompanyDao companyDao;
    private final DepartDao departDao;
    private final SignDao signDao;
    private final UserDao userDao;
    private final VisitorDao visitorDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        companyDaoConfig = daoConfigMap.get(CompanyDao.class).clone();
        companyDaoConfig.initIdentityScope(type);

        departDaoConfig = daoConfigMap.get(DepartDao.class).clone();
        departDaoConfig.initIdentityScope(type);

        signDaoConfig = daoConfigMap.get(SignDao.class).clone();
        signDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        visitorDaoConfig = daoConfigMap.get(VisitorDao.class).clone();
        visitorDaoConfig.initIdentityScope(type);

        companyDao = new CompanyDao(companyDaoConfig, this);
        departDao = new DepartDao(departDaoConfig, this);
        signDao = new SignDao(signDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        visitorDao = new VisitorDao(visitorDaoConfig, this);

        registerDao(Company.class, companyDao);
        registerDao(Depart.class, departDao);
        registerDao(Sign.class, signDao);
        registerDao(User.class, userDao);
        registerDao(Visitor.class, visitorDao);
    }
    
    public void clear() {
        companyDaoConfig.clearIdentityScope();
        departDaoConfig.clearIdentityScope();
        signDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        visitorDaoConfig.clearIdentityScope();
    }

    public CompanyDao getCompanyDao() {
        return companyDao;
    }

    public DepartDao getDepartDao() {
        return departDao;
    }

    public SignDao getSignDao() {
        return signDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public VisitorDao getVisitorDao() {
        return visitorDao;
    }

}
